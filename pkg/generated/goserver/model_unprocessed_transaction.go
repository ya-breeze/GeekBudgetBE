// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

type UnprocessedTransaction struct {
	Transaction Transaction `json:"transaction"`

	Matched []MatcherAndTransaction `json:"matched"`

	Duplicates []Transaction `json:"duplicates"`
}

// AssertUnprocessedTransactionRequired checks if the required fields are not zero-ed
func AssertUnprocessedTransactionRequired(obj UnprocessedTransaction) error {
	elements := map[string]interface{}{
		"transaction": obj.Transaction,
		"matched":     obj.Matched,
		"duplicates":  obj.Duplicates,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertTransactionRequired(obj.Transaction); err != nil {
		return err
	}
	for _, el := range obj.Matched {
		if err := AssertMatcherAndTransactionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Duplicates {
		if err := AssertTransactionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertUnprocessedTransactionConstraints checks if the values respects the defined constraints
func AssertUnprocessedTransactionConstraints(obj UnprocessedTransaction) error {
	if err := AssertTransactionConstraints(obj.Transaction); err != nil {
		return err
	}
	for _, el := range obj.Matched {
		if err := AssertMatcherAndTransactionConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Duplicates {
		if err := AssertTransactionConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
