// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

import (
	"time"
)

type BudgetItemNoId struct {
	Date time.Time `json:"date"`

	AccountId string `json:"accountId"`

	Amount float64 `json:"amount"`

	Description string `json:"description,omitempty"`
}

type BudgetItemNoIdInterface interface {
	GetDate() time.Time
	GetAccountId() string
	GetAmount() float64
	GetDescription() string
}

func (c *BudgetItemNoId) GetDate() time.Time {
	return c.Date
}
func (c *BudgetItemNoId) GetAccountId() string {
	return c.AccountId
}
func (c *BudgetItemNoId) GetAmount() float64 {
	return c.Amount
}
func (c *BudgetItemNoId) GetDescription() string {
	return c.Description
}

// AssertBudgetItemNoIdRequired checks if the required fields are not zero-ed
func AssertBudgetItemNoIdRequired(obj BudgetItemNoId) error {
	elements := map[string]interface{}{
		"date":      obj.Date,
		"accountId": obj.AccountId,
		"amount":    obj.Amount,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBudgetItemNoIdConstraints checks if the values respects the defined constraints
func AssertBudgetItemNoIdConstraints(obj BudgetItemNoId) error {
	return nil
}
