// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

type BankAccountInfo struct {
	AccountId string `json:"accountId,omitempty"`

	BankId string `json:"bankId,omitempty"`

	// List of balances for this account. It's an array since one account could hold multiple currencies, for example, cash account could hold EUR, USD and CZK. Or one bank account could hold multiple currencies.
	Balances []BankAccountInfoBalancesInner `json:"balances,omitempty"`
}

type BankAccountInfoInterface interface {
	GetAccountId() string
	GetBankId() string
	GetBalances() []BankAccountInfoBalancesInner
}

func (c *BankAccountInfo) GetAccountId() string {
	return c.AccountId
}
func (c *BankAccountInfo) GetBankId() string {
	return c.BankId
}
func (c *BankAccountInfo) GetBalances() []BankAccountInfoBalancesInner {
	return c.Balances
}

// AssertBankAccountInfoRequired checks if the required fields are not zero-ed
func AssertBankAccountInfoRequired(obj BankAccountInfo) error {
	for _, el := range obj.Balances {
		if err := AssertBankAccountInfoBalancesInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertBankAccountInfoConstraints checks if the values respects the defined constraints
func AssertBankAccountInfoConstraints(obj BankAccountInfo) error {
	for _, el := range obj.Balances {
		if err := AssertBankAccountInfoBalancesInnerConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
