// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

import (
	"context"
	"errors"
	"net/http"
)

// NotificationsAPIService is a service that implements the logic for the NotificationsAPIServicer
// This service should implement the business logic for every endpoint for the NotificationsAPI API.
// Include any external packages or services that will be required by this service.
type NotificationsAPIService struct {
}

// NewNotificationsAPIService creates a default api service
func NewNotificationsAPIService() *NotificationsAPIService {
	return &NotificationsAPIService{}
}

// DeleteNotification - delete notification
func (s *NotificationsAPIService) DeleteNotification(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteNotification with the required logic for this service method.
	// Add api_notifications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteNotification method not implemented")
}

// GetNotifications - return all notifications
func (s *NotificationsAPIService) GetNotifications(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetNotifications with the required logic for this service method.
	// Add api_notifications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Notification{}) or use other options such as http.Ok ...
	// return Response(200, []Notification{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNotifications method not implemented")
}
