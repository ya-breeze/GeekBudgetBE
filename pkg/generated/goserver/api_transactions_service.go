// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

import (
	"context"
	"errors"
	"net/http"
	"time"
)

// TransactionsAPIService is an interface that defines the logic for the TransactionsAPIServicer
type TransactionsAPIService interface {
	// CreateTransaction - create new transaction
	CreateTransaction(ctx context.Context, transactionNoId TransactionNoId) (ImplResponse, error)
	// DeleteTransaction - delete transaction
	DeleteTransaction(ctx context.Context, id string) (ImplResponse, error)
	// GetTransaction - get transaction
	GetTransaction(ctx context.Context, id string) (ImplResponse, error)
	// GetTransactions - get all transactions which matches given filters
	GetTransactions(ctx context.Context, description string, amountFrom float64, amountTo float64, dateFrom time.Time, dateTo time.Time) (ImplResponse, error)
	// UpdateTransaction - update transaction
	UpdateTransaction(ctx context.Context, id string, transactionNoId TransactionNoId) (ImplResponse, error)
}

// TransactionsAPIService is a service that implements the logic for the TransactionsAPIServicer
// This service should implement the business logic for every endpoint for the TransactionsAPI API.
// Include any external packages or services that will be required by this service.
type TransactionsAPIServiceImpl struct {
}

// NewTransactionsAPIService creates a default api service
func NewTransactionsAPIService() TransactionsAPIService {
	return &TransactionsAPIServiceImpl{}
}

// CreateTransaction - create new transaction
func (s *TransactionsAPIServiceImpl) CreateTransaction(ctx context.Context, transactionNoId TransactionNoId) (ImplResponse, error) {
	// TODO - update CreateTransaction with the required logic for this service method.
	// Add api_transactions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Transaction{}) or use other options such as http.Ok ...
	// return Response(200, Transaction{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTransaction method not implemented")
}

// DeleteTransaction - delete transaction
func (s *TransactionsAPIServiceImpl) DeleteTransaction(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteTransaction with the required logic for this service method.
	// Add api_transactions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteTransaction method not implemented")
}

// GetTransaction - get transaction
func (s *TransactionsAPIServiceImpl) GetTransaction(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetTransaction with the required logic for this service method.
	// Add api_transactions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Transaction{}) or use other options such as http.Ok ...
	// return Response(200, Transaction{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTransaction method not implemented")
}

// GetTransactions - get all transactions which matches given filters
func (s *TransactionsAPIServiceImpl) GetTransactions(ctx context.Context, description string, amountFrom float64, amountTo float64, dateFrom time.Time, dateTo time.Time) (ImplResponse, error) {
	// TODO - update GetTransactions with the required logic for this service method.
	// Add api_transactions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Transaction{}) or use other options such as http.Ok ...
	// return Response(200, []Transaction{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTransactions method not implemented")
}

// UpdateTransaction - update transaction
func (s *TransactionsAPIServiceImpl) UpdateTransaction(ctx context.Context, id string, transactionNoId TransactionNoId) (ImplResponse, error) {
	// TODO - update UpdateTransaction with the required logic for this service method.
	// Add api_transactions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Transaction{}) or use other options such as http.Ok ...
	// return Response(200, Transaction{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTransaction method not implemented")
}
