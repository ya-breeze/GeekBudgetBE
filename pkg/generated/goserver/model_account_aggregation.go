// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Geek Budget - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

type AccountAggregation struct {
	AccountId string `json:"accountId"`

	Amounts []float64 `json:"amounts"`
}

type AccountAggregationInterface interface {
	GetAccountId() string
	GetAmounts() []float64
}

func (c *AccountAggregation) GetAccountId() string {
	return c.AccountId
}
func (c *AccountAggregation) GetAmounts() []float64 {
	return c.Amounts
}

// AssertAccountAggregationRequired checks if the required fields are not zero-ed
func AssertAccountAggregationRequired(obj AccountAggregation) error {
	elements := map[string]interface{}{
		"accountId": obj.AccountId,
		"amounts":   obj.Amounts,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertAccountAggregationConstraints checks if the values respects the defined constraints
func AssertAccountAggregationConstraints(obj AccountAggregation) error {
	return nil
}
