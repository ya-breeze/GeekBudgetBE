/*
Geek Budget - OpenAPI 3.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
Contact: ilya.korolev@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the BankAccountInfoBalancesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankAccountInfoBalancesInner{}

// BankAccountInfoBalancesInner struct for BankAccountInfoBalancesInner
type BankAccountInfoBalancesInner struct {
	CurrencyId     *string  `json:"currencyId,omitempty"`
	OpeningBalance *float64 `json:"openingBalance,omitempty"`
	ClosingBalance *float64 `json:"closingBalance,omitempty"`
}

// NewBankAccountInfoBalancesInner instantiates a new BankAccountInfoBalancesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankAccountInfoBalancesInner() *BankAccountInfoBalancesInner {
	this := BankAccountInfoBalancesInner{}
	return &this
}

// NewBankAccountInfoBalancesInnerWithDefaults instantiates a new BankAccountInfoBalancesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankAccountInfoBalancesInnerWithDefaults() *BankAccountInfoBalancesInner {
	this := BankAccountInfoBalancesInner{}
	return &this
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *BankAccountInfoBalancesInner) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountInfoBalancesInner) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *BankAccountInfoBalancesInner) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *BankAccountInfoBalancesInner) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

// GetOpeningBalance returns the OpeningBalance field value if set, zero value otherwise.
func (o *BankAccountInfoBalancesInner) GetOpeningBalance() float64 {
	if o == nil || IsNil(o.OpeningBalance) {
		var ret float64
		return ret
	}
	return *o.OpeningBalance
}

// GetOpeningBalanceOk returns a tuple with the OpeningBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountInfoBalancesInner) GetOpeningBalanceOk() (*float64, bool) {
	if o == nil || IsNil(o.OpeningBalance) {
		return nil, false
	}
	return o.OpeningBalance, true
}

// HasOpeningBalance returns a boolean if a field has been set.
func (o *BankAccountInfoBalancesInner) HasOpeningBalance() bool {
	if o != nil && !IsNil(o.OpeningBalance) {
		return true
	}

	return false
}

// SetOpeningBalance gets a reference to the given float64 and assigns it to the OpeningBalance field.
func (o *BankAccountInfoBalancesInner) SetOpeningBalance(v float64) {
	o.OpeningBalance = &v
}

// GetClosingBalance returns the ClosingBalance field value if set, zero value otherwise.
func (o *BankAccountInfoBalancesInner) GetClosingBalance() float64 {
	if o == nil || IsNil(o.ClosingBalance) {
		var ret float64
		return ret
	}
	return *o.ClosingBalance
}

// GetClosingBalanceOk returns a tuple with the ClosingBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountInfoBalancesInner) GetClosingBalanceOk() (*float64, bool) {
	if o == nil || IsNil(o.ClosingBalance) {
		return nil, false
	}
	return o.ClosingBalance, true
}

// HasClosingBalance returns a boolean if a field has been set.
func (o *BankAccountInfoBalancesInner) HasClosingBalance() bool {
	if o != nil && !IsNil(o.ClosingBalance) {
		return true
	}

	return false
}

// SetClosingBalance gets a reference to the given float64 and assigns it to the ClosingBalance field.
func (o *BankAccountInfoBalancesInner) SetClosingBalance(v float64) {
	o.ClosingBalance = &v
}

func (o BankAccountInfoBalancesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankAccountInfoBalancesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyId) {
		toSerialize["currencyId"] = o.CurrencyId
	}
	if !IsNil(o.OpeningBalance) {
		toSerialize["openingBalance"] = o.OpeningBalance
	}
	if !IsNil(o.ClosingBalance) {
		toSerialize["closingBalance"] = o.ClosingBalance
	}
	return toSerialize, nil
}

type NullableBankAccountInfoBalancesInner struct {
	value *BankAccountInfoBalancesInner
	isSet bool
}

func (v NullableBankAccountInfoBalancesInner) Get() *BankAccountInfoBalancesInner {
	return v.value
}

func (v *NullableBankAccountInfoBalancesInner) Set(val *BankAccountInfoBalancesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBankAccountInfoBalancesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBankAccountInfoBalancesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankAccountInfoBalancesInner(val *BankAccountInfoBalancesInner) *NullableBankAccountInfoBalancesInner {
	return &NullableBankAccountInfoBalancesInner{value: val, isSet: true}
}

func (v NullableBankAccountInfoBalancesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankAccountInfoBalancesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
